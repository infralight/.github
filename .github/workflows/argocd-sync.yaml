name: Reusable ArgoCD Sync
on:
  workflow_call:
    inputs:
      appName:
        type: string
        required: true
      appNameSuffix:
        type: string
        default: ''
        required: false
      fetcherName:
        type: string
        default: ''
        required: false
      branch:
        type: string
        required: true
      environment:
        type: string
        required: true
      cluster:
        type: string
        required: true
      timeout:
        type: string
        default: '500'
        required: false
    secrets:
      CI_ACCOUNT_ID:
        required: false
      CI_REGION:
        required: false
      CI_ARGOCD:
        required: false
      CI_ARGOCD_TOKEN:
        required: true
      CI_SLACK_WEBHOOK:
        required: true
      CI_ARGOCD_SERVER:
        required: true
      CI_PAT:
        required: true
jobs:
  argocd:
    environment: ${{ inputs.environment }}
    name: "Update image tag and sync changes on cluster."
    runs-on: [self-hosted, "prod"]
    steps:
      - id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ inputs.fetcherName }}
      - name: "[ArgoCD]: set variables"
        id: vars
        run: |
          echo "APP_NAME=${{ format('{0}-{1}-{2}{3}', inputs.environment, inputs.cluster, inputs.appName, inputs.appNameSuffix) }}" >> $GITHUB_ENV
          echo "ARGOCD_AUTH_TOKEN=${{ secrets.CI_ARGOCD_TOKEN }}" >> $GITHUB_ENV
          echo "ARGOCD_SERVER=${{ secrets.CI_ARGOCD_SERVER }}" >> $GITHUB_ENV
          echo "FETCHER_NAME=${{ steps.string.outputs.uppercase }}" >> $GITHUB_ENV
          echo 'ARGOCD_OPTS="--grpc-web"' >> $GITHUB_ENV
          echo "TAG=${GITHUB_SHA::6}" >> $GITHUB_ENV
          echo "SLACK_ICON=https://cncf-branding.netlify.app/img/projects/argo/icon/color/argo-icon-color.png"
          if [[ "${{ inputs.environment }}" == "dev" ]]; then
            echo "SLACK_ICON=https://firefly-app-assets.s3.us-east-1.amazonaws.com/logo/serenity.png"
          fi
      - name: Clone helm-values repository
        uses: actions/checkout@v4
        with:
          repository: infralight/helm-values
          path: tmp/helm-values
          ref: main
          token: ${{ secrets.CI_PAT }}
      - name: "UPDATE IMAGE TAG"
        id: iacathon
        if: ${{ inputs.fetcherName == 'iacathon-crawler' }}
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.base.tagsOverride.IACATHON_CONTAINER_IMAGE = "${{ inputs.fetcherName != '' && format('{0}.dkr.ecr.{1}.amazonaws.com/iacathon-crawler:{2}', secrets.CI_ACCOUNT_ID, secrets.CI_REGION, env.TAG) || env.TAG }}"' tmp/helm-values/${{ inputs.environment }}/${{ inputs.cluster }}/${{ inputs.appName }}${{ inputs.appNameSuffix }}.yaml
      - name: "UPDATE IMAGE TAG"
        id: fetcher
        if: ${{ inputs.fetcherName != 'iacathon-crawler' }}
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '${{ inputs.fetcherName != '' && format('.base.tagsOverride.FETCHER_{0}_IMAGE', env.FETCHER_NAME) || '.base.tag' }} = "${{ inputs.fetcherName != '' && format('{0}.dkr.ecr.{1}.amazonaws.com/flywheel-{2}-consumer:{3}', secrets.CI_ACCOUNT_ID, secrets.CI_REGION, inputs.fetcherName, env.TAG) || env.TAG }}"' tmp/helm-values/${{ inputs.environment }}/${{ inputs.cluster }}/${{ inputs.appName }}${{ inputs.appNameSuffix }}.yaml
      - uses: EndBug/add-and-commit@v9
        with:
          cwd: 'tmp/helm-values'
          message: ${{ env.APP_NAME }} image updated to ${{ env.TAG }}'
          pull: '--rebase --autostash'
          push: 'origin --force'
      - name: "[ArgoCD]: trigger sync"
        uses: clowdhaus/argo-cd-action/@v2.0.0
        with:
          command: app sync "${{ env.APP_NAME }}"
          options: --retry-limit 30 --retry-backoff-duration 10s
      - name: "[ArgoCD]: wait for deploy to complete"
        uses: clowdhaus/argo-cd-action/@v2.0.0
        with:
          command: app wait ${{ env.APP_NAME }} --timeout ${{ inputs.timeout }}
      - name: "Notify Slack of deployment status"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_ICON: https://firefly-app-assets.s3.us-east-1.amazonaws.com/logo/serenity.png
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "${{ inputs.appName }} application has been successfully deployed from ${{ inputs.branch }} to ${{ inputs.environment }}-${{ inputs.cluster}} cluster, status: ${{ job.status }}"
          SLACK_TITLE: "**${{ inputs.environment }}**: ${{ env.APP_NAME }} ArgoCD deployment notification, status: ${{ job.status }}"
          SLACK_USERNAME: cicdBot
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
