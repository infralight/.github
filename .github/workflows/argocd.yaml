name: Reusable ArgoCD Sync

on:
  workflow_call:
    inputs:
      app-name:
        type: string
        required: true
      branch:
        type: string
        required: true
      tagKey:
        type: string
        required: true
      environment:
        type: string
        default: 'dev'
        required: false
      timeout:
        type: string
        default: '300'
        required: false
    secrets:
      CI_ARGOCD:
        required: true
      CI_SLACK_WEBHOOK:
        required: true
jobs:
  argocd:
    environment: ${{ inputs.environment }}
    name: "[ArgoCD]"
    runs-on: ubuntu-latest
    steps:
      - name: "[ArgoCD]: set variables"
        id: vars
        run: |
          echo "ARGOCD_AUTH_TOKEN=${{ secrets.CI_ARGOCD }}" >> $GITHUB_ENV
          echo "ARGOCD_SERVER=${{ vars.CI_ARGOCD_SERVER }}" >> $GITHUB_ENV
          echo 'ARGOCD_OPTS="--grpc-web"' >> $GITHUB_ENV
          echo "TAG=${GITHUB_SHA::6}" >> $GITHUB_ENV
      - name: "[ArgoCD]: modify application revision target to ${{inputs.branch}}"
        uses: clowdhaus/argo-cd-action/@v1.5.0
        with:
          command: app set "${{inputs.app-name}}"
          options: --revision ${{ inputs.branch }}
      - name: "[ArgoCD]: update docker image in ArgoCD Application ${{ inputs.app-name }} tag to ${{ env.TAG }}"
        uses: clowdhaus/argo-cd-action/@v1.5.0
        with:
          command: app set "${{inputs.app-name}}"
          options: --helm-set "${{ inputs.tagKey }}=${{ env.TAG }}"
      - name: "[ArgoCD]: trigger refresh"
        uses: clowdhaus/argo-cd-action/@v1.5.0
        with:
          command: app get "${{inputs.app-name}}"
          options: --hard-refresh
      - name: "[ArgoCD]: trigger sync"
        uses: clowdhaus/argo-cd-action/@v1.5.0
        with:
          command: app sync "${{inputs.app-name}}"
      - name: "[ArgoCD]: wait for deploy to complete"
        uses: clowdhaus/argo-cd-action/@v1.5.0
        with:
          command: app wait ${{ inputs.app-name }} --timeout ${{ inputs.timeout }}
      - name: "Notify Slack of deployment status"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_ICON: "https://firefly-app-assets.s3.us-east-1.amazonaws.com/logo/serenity.png?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEP7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDGV1LWNlbnRyYWwtMSJGMEQCIAnhD%2BiJ3RooMpnLSTK11%2Bo6bqzaiofoC9Lx5Nvnle7MAiAQdtCICSqId%2B40GModTuCMRN7eLd8m4SQQ%2FUS%2FVLUi8irZAwh3EAEaDDA5NDcyNDU0OTEyNiIM8PGBQ6MtB4DT3WXmKrYDbXSTBPmBkrSEhSkboQjRh%2B%2F0xIs6tscx8v2P6s%2FNgrtxgXz%2FE25mWz3cq25kD6qht4ku3I0tpP%2FX1D2QqvHMdKDuV3%2FCVLFjh2CMzgJk9JtNQSaDiEmHGO%2FPZ1rkrH1GcA7P1Kqn0VJLo%2BBh19d1XRix0zWspamobcZx5qHa0iSZ0iWcvr7ygEYNdhCGeio8BgMa4UmBSCV6aqQg3gd7qt0bHQUPUPGoMrRHEwTxaz5NiVvqbxz3hZSVNlT6UqR%2B1IMEGDaXx%2BsoMABBy9sy5MZ19lFsm%2FQkgJJ%2F7c8xFeJRcnePJHpzd%2FHbB0fRNrUJEqyS6b1KrYv60eD%2F%2BPKlZp54tvBw7V2dSw2H3ztxjWV0D6SIqeclBeBqCIiui%2BvWgySVTmqulj%2FJUxPkarVVzXlyqRJOvgDyAsfmgCnekFi7QYujUVJEss1ULRaKN%2Bapf4hZ3SbfwTCZXwoBY394B5c4F98B4ecU%2Blb5bSOlYbI8BZerPCgPlvOs9tw%2B5IGVsYuc49gk%2FIcWtuxQXwUYG8mc9mGvzUWiKp0C4SRauu%2BvaPxz608Z1wyxoXvb0rv5HyLGKrjtMNL42Z4GOpUCn8EGeXhHQsLZWohGP4jzz3tnpiJR3sr4dkLN1fkC8ybBhWIyKchs7FCwDAfaQbK8sVDSXGgF5EmnTiFUUmUDPsOs%2Bvs%2F1xz0IC43e6yWChdm6flBwRmxunEGrECOKC0rTb1lDZaETNe7SRLmUI9qnvsondNLNN%2BRmjsZqy4seDmcQ0XbWnpF6%2FfXjXSyMx8H7egY93i8%2FtZIjrBKql1pSj%2Fi3ozSt%2F2ayXc00mbYg2TFw0fYx%2B0i6UtDoH0PSR3U9PKeuo7kn4Me%2FQ7Rxd6ejE6bxxLNXE3oZkxe1MofXWas%2FRp0t0tSyOfR1XXJ1Xb%2FwsJ9NyQL2oXY8a76Vq%2F2dhYGUdLhUaPVeNcRjnAtkw8EMrV9zA%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20230129T140408Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIARMDQF5IDBDIG22JS%2F20230129%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=2d032b1e1db05246041b1db6ffb53a4eb54191e47aa553fee6e1ab6f37720975"
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "${{ inputs.app-name }} ArgoCD successfully deployed from ${{ inputs.branch }} to ${{ inputs.environment }}, status: ${{ job.status }}"
          SLACK_TITLE: "**${{ inputs.environment }}**: ${{ inputs.app-name }} ArgoCD deployment notification, status: ${{ job.status }}"
          SLACK_USERNAME: cicdBot
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
